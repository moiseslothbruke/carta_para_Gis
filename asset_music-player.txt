<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Music Player</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #111;
      color: #fff;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .player {
      background: #222;
      padding: 30px;
      border-radius: 10px;
      text-align: center;
      width: 300px;
    }

    .player h2 {
      margin-bottom: 10px;
    }

    .controls {
      margin-top: 20px;
    }

    button {
      background: #333;
      border: none;
      color: #fff;
      padding: 10px 15px;
      margin: 5px;
      border-radius: 5px;
      cursor: pointer;
    }

    button:hover {
      background: #555;
    }

    .progress-bar {
      margin-top: 15px;
      width: 100%;
    }
  </style>
</head>
<body>

  <div class="player">
    <h2 id="title">Música 1</h2>
    <audio id="audio" src="musica1.mp3"></audio>

    <div class="controls">
      <button onclick="prevMusic()">⏮️</button>
      <button onclick="togglePlay()">▶️/⏸️</button>
      <button onclick="nextMusic()">⏭️</button>
    </div>

    <input type="range" id="progress" class="progress-bar" value="0" max="100">
  </div>

  <script>
    const musicList = [
      { title: 'Música 1', file: 'musica1.mp3' },
      { title: 'Música 2', file: 'musica2.mp3' },
      { title: 'Música 3', file: 'musica3.mp3' }
    ];

    let current = 0;
    const audio = document.getElementById('audio');
    const title = document.getElementById('title');
    const progress = document.getElementById('progress');

    function loadMusic(index) {
      title.innerText = musicList[index].title;
      audio.src = musicList[index].file;
    }

    function togglePlay() {
      if (audio.paused) {
        audio.play();
      } else {
        audio.pause();
      }
    }

    function nextMusic() {
      current = (current + 1) % musicList.length;
      loadMusic(current);
      audio.play();
    }

    function prevMusic() {
      current = (current - 1 + musicList.length) % musicList.length;
      loadMusic(current);
      audio.play();
    }

    audio.addEventListener('timeupdate', () => {
      progress.value = (audio.currentTime / audio.duration) * 100 || 0;
    });

    progress.addEventListener('input', () => {
      audio.currentTime = (progress.value / 100) * audio.duration;
    });

    // Carrega a primeira música ao iniciar
    loadMusic(current);
  </script>

</body>
</html>
